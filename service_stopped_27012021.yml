   - hosts: "{{ Server_name }}"
#   - hosts: all 
     become: true
     gather_facts: false
     tasks:
      - name: "Gather {{Service_Name}} status on host before action performed"
        service_facts:
        register: services_state

      - name: "Systemd: {{Service_Name}} status before action perform"
        debug:
          var: services_state.ansible_facts.services["{{Service_Name}}.service"].state
        register: SD_current_state
        when: services_state is search("systemd")

      - name: "SysV: {{Service_Name}} status before action perform"
        debug:
         var: services_state.ansible_facts.services.{{Service_Name}}.state
        register: SV_current_state
#        when: services_state is search("sysv")
        when: services_state is search("sysv")

      - debug: 
          msg: '{{ SD_current_state }}'
      - name: Perform starting of service
        service:
          name: "{{Service_Name}}"
          state: started
        register: start_process_triggered
        when: 
            - SV_current_state is not search('running') 
            - SD_current_state is not search('running') 

      - name: Verify the port is Opened or not
        wait_for:
         port: "{{Port_number}}"
         timeout: 5
        ignore_errors: True
        when: Port_number is defined

      - name: "Gather {{Service_Name}} status on hosts after action performed"
        service_facts:
        register: restart_state
        when: "SD_current_state is not search('running') or SV_current_state is not search('running')"

      - name: "SystemD: {{Service_Name}} status after action performed"
        debug:
         var: restart_state.ansible_facts.services["{{Service_Name}}.service"].state
        when:
           - restart_state is search("running")
           - restart_state is search("systemd")

      - name: "SysV: {{Service_Name}} status after action perform"
        debug:
         var: services_state.ansible_facts.services.{{Service_Name}}.state
        when:
           - restart_state is search("running")
#           - restart_state is search("sysv")
           - restart_state is not search("systemd")
      - block:
          - include_tasks: '{{Service_Name}}_service_27012021.yml'
        rescue:
          - debug:
              msg: No further checks available for {{Service_Name}} service

      - name: Response to API
        uri:
            url: http://192.168.100.100:8002/ansible-post/
            method: POST
            body:
                - " Service Status before Action {{ SD_current_state }}"
                - " Service Status after Action {{ restart_state }}"
